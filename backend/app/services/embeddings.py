from openai import AsyncOpenAI

import app.constants as CONST
from app.models.embedding import Embedding

client = AsyncOpenAI()
""" The OpenAI client to use for generating embeddings """


async def generate(
    input: str | list[str], model: CONST.TYPE_SUPPORTED_EMBEDDING_MODEL
) -> list[Embedding]:
    """
    Generate embeddings for the input using the specified model
    """

    # create embeddings generated by the openai model
    response = await client.embeddings.create(input=input, model=model)

    # sorted embeddings by index
    embeddings = sorted(response.data, key=lambda x: x.index)

    # return list of {source, embedding}
    return [
        Embedding(
            source=input[embedding.index],
            embedding=embedding.embedding,
        )
        for embedding in embeddings
    ]
