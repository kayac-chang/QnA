import app.constants as CONST
from app.models.embedding import Embedding

from .client import client


async def generate(
    input: str | list[str], model: CONST.TYPE_SUPPORTED_EMBEDDING_MODEL
) -> list[Embedding]:
    """
    Generate embeddings for the input using the specified model
    """

    # if input is empty str or empty list, return empty list
    if not input:
        return []

    # create embeddings generated by the openai model
    try:
        response = await client.embeddings.create(input=input, model=model)

        # sorted embeddings by index
        embeddings = sorted(response.data, key=lambda x: x.index)

        # return list of {source, embedding}
        return [
            Embedding(
                source=input[embedding.index],
                embedding=embedding.embedding,
            )
            for embedding in embeddings
        ]
    except Exception as e:
        print("Exception in generate embeddings:", e)
        return []
